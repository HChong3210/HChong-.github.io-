[{"title":"","url":"http://hchong.net/2016/12/21/123/","content":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<meta charset=\"utf-8\">\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\">\n\t\t<title>测试一下Ulysses</title>\n\t</head>\n<body>\n<h1>测试一下Ulysses</h1>\n\n<h3>快速导出</h3>\n\n<ul>\n\t<li><code>⌘6</code> 针对当前编辑器显示“快速导出”(SIXport)</li>\n\t<li>您还可以右键点按侧边栏中的组、过滤器或文稿，然后选择“快速导出…”。</li>\n</ul>\n\n<h3>文本导出</h3>\n\n<ul>\n\t<li>在纯文本、富文本、Markdown 和 TextBundle 输出之间选择：\n\n\t\t<ul>\n\t\t\t<li>“纯文本”将标记、评论、批注、图像等全部去除，仅导出文本本身。</li>\n\t\t\t<li>“富文本”将生成简单的 RTF 文件。</li>\n\t\t\t<li>“Markdown”将保留（或转换）所有标记，按标记符语法导出文本。</li>\n\t\t\t<li><a href=\"http://textbundle.org\" title=\"TextBundle.org\" target=\"_blank\" rel=\"external\">“TextBundle”</a> 是一种新的文件格式，支持在纯文本文件中嵌入图像。</li>\n\t\t</ul></li>\n</ul>\n\n<h3>HTML 导出</h3>\n\n<ul>\n\t<li>选择输出时要使用到输出样式。</li>\n\t<li>在片段和单页输出中间选择：\n\n\t\t<ul>\n\t\t\t<li>“片段”将仅将所有标记转换为 HTML，然后导出文本。</li>\n\t\t\t<li>“单页”将创建完整到 HTML 文稿，包括标题、正文、CSS 链接等。</li>\n\t\t</ul></li>\n</ul>\n\n<h3>ePub 导出</h3>\n\n<ul>\n\t<li>选择输出时要使用到输出样式。</li>\n\t<li>您可以设置标题和作者元数据。</li>\n\t<li>您可以放入要使用的图像作为电子书的封面图像。</li>\n</ul>\n\n<h3>PDF 导出</h3>\n\n<ul>\n\t<li>选择输出时要使用到输出样式。</li>\n\t<li>选择纸张格式。</li>\n</ul>\n\n<h3>DOCX 导出</h3>\n\n<ul>\n\t<li>选择输出时要使用到输出样式。</li>\n\t<li>选择纸张格式。</li>\n</ul>\n\n<h3>发布</h3>\n\n<ul>\n\t<li>Ulysses 让您可以将所编辑的内容直接发布到 Wordpress 博客：\n\n\t\t<ul>\n\t\t\t<li>选择“添加帐户 › WordPress/定制 WordPress”。</li>\n\t\t\t<li>提供您的用户名和密码，以及用于 WordPress 自承载安装的 URL。</li>\n\t\t\t<li>发布文章前，您可以修改其设置（类别、标签、日程安排、发布状态等。）</li>\n\t\t</ul></li>\n\t<li>如果您拥有 <a href=\"https://medium.com\" target=\"_blank\" rel=\"external\">Medium</a> 帐户，那么 Ulysses 可以让您将文本作为草稿发布到 Medium 上：\n\n\t\t<ul>\n\t\t\t<li>选择“添加帐户” › “Medium”。</li>\n\t\t\t<li>您需要提供 integration token 进行激活。</li>\n\t\t</ul></li>\n</ul>\n\n<h3>导出预览</h3>\n\n<ul>\n\t<li><code>⇧⌘P</code> 预览当前侧边栏选择（可以是组）</li>\n\t<li><code>⌘R</code> 刷新所有打开的预览</li>\n\t<li>选择用来预览的导出样式。</li>\n\t<li>您可以直接从预览窗口导出。</li>\n</ul>\n\n</body>\n</html>\n\n","categories":[],"tags":[]},{"title":"hexo常见问题","url":"http://hchong.net/2016/12/21/hexo常见问题/","content":"<h1 id=\"hexo常见问题\"><a href=\"#hexo常见问题\" class=\"headerlink\" title=\"hexo常见问题\"></a>hexo常见问题</h1><p>在使用hexo的过程中遇到了一些问题, 在这里列出来, 做一个记录.</p>\n<h2 id=\"hexo的常见发布流程\"><a href=\"#hexo的常见发布流程\" class=\"headerlink\" title=\"hexo的常见发布流程\"></a>hexo的常见发布流程</h2><ul>\n<li>hexo新建一篇文章使用<code>hexo new type name</code>, <code>type</code>有三种, 最常使用的是<code>post</code>, <code>name</code>是新建文档的名字</li>\n<li><p>hexo新建完成, 编辑之后发布会经常使用到下面几个命令:</p>\n<ul>\n<li><code>hexo clean</code>清除之前缓存的一些信息, 例如主题之类的, 不是每次都必须执行</li>\n<li><code>hexo g</code>相当于编译</li>\n<li><code>hexo s</code>发布到本地服务器, 也可做调试用</li>\n<li><code>hexo d</code>推本地的文件到服务器, 这里指的是github上面, 如果绑定的有域名, 就直接发布到Internet.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"hexo目录结构分析\"><a href=\"#hexo目录结构分析\" class=\"headerlink\" title=\"hexo目录结构分析\"></a>hexo目录结构分析</h2><h3 id=\"根目录\"><a href=\"#根目录\" class=\"headerlink\" title=\"根目录\"></a>根目录</h3><ul>\n<li>_config.yml: 位于本地博客的根目录下, 在这里面对整个博客的内容进行一些设置</li>\n<li>source文件夹: 里面存储一些博客使用的文件资源, 例如<em>category(分类)</em>, <em>tag(标签)</em>, <em>link(链接)</em>, <em>about(关于)</em>, <em>project(工程)</em>, <em>search(搜索)</em>, *_posts(使用post格式新建的文章.md文件存储在这里).需要说明一下的是, 这些文件夹的名称和数量不固定, 要看你使用的主题里面的模块大概有几个 ,我使用的是<a href=\"http://forsigner.com/2016/03/10/fexo-doc-zh-cn/\" target=\"_blank\" rel=\"external\">fexo</a>.还有一些坑, 后面再详述.</li>\n<li>public文件夹: 里面存储的是之前发布过得一些归档数据, 如果要删除之前的测试数据的话, 记得清理里面响应的内容.</li>\n<li>scaffolds文件夹: 存储.md文档的类型.</li>\n<li>themes文件夹: 里面是你下载的主题内容, 如果有多个主题, 就会有多个文件夹, 但只能同时使用一种样式的主题.这个后面会着重分析一下.</li>\n</ul>\n<h3 id=\"themes文件夹\"><a href=\"#themes文件夹\" class=\"headerlink\" title=\"themes文件夹\"></a>themes文件夹</h3><p>这里面主要会进行一些主题相关的设置.</p>\n<ul>\n<li>_config.yml: 位于主题目录下, 在这里面对当前只用主题的内容进行一些配置, 不同主题的配置可能不太一样, 我是用的是<a href=\"http://forsigner.com/2016/03/10/fexo-doc-zh-cn/\" target=\"_blank\" rel=\"external\">fexo</a></li>\n</ul>\n<ul>\n<li>source文件夹: 该文件夹下面是该主题相关的一些资源, 例如一些静态的图片之类的.</li>\n<li>layout文件夹: 该文件夹下面是静态页面显示的相关配置. 代码高亮的设置也是在该文件夹下面. 其他的例如静态页面的展示, 可以修改相关的js文件.</li>\n</ul>\n<p>##修改代码高亮<br>代码高亮的展示, 不同的主题有不同的使用方式, 但是代码高亮的theme可以参考这里, 我使用的是<a href=\"https://highlightjs.org/static/demo/\" target=\"_blank\" rel=\"external\">HighLight</a>, 它提供了多种Theme, 基本上能满足各种需求.</p>\n<p>修改步骤如下:</p>\n<p>1.修改博客根目录下的<em>_config.yml</em>文件, 关闭hexo自带的代码高亮.</p>\n<pre><code class=\"js\">highlight:\n  enable: false\n  line_number: false\n  auto_detect: false\n  tab_replace:\n</code></pre>\n<p>2.<code>cd 博客根目录/themes/fexo/layout/_partial</code>打开<em>head.ejs</em>文件, 最好是在<code>&lt;head&gt;&lt;/head&gt;</code>之间开头处插入代码</p>\n<pre><code class=\"html5\">  &lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.bootcss.com/highlight.js/9.2.0/styles/rainbow.min.css&quot;&gt;\n  &lt;script src=&quot;//cdn.bootcss.com/highlight.js/9.2.0/highlight.min.js&quot;&gt;&lt;/script&gt;\n  &lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;\n</code></pre>\n<p>也可以使用下面的写法:</p>\n<pre><code class=\"h5\">&lt;link rel=&quot;stylesheet&quot; href=&quot;/path/to/styles/default.css&quot;&gt;\n&lt;script src=&quot;/path/to/highlight.pack.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;\n</code></pre>\n<p>二者的区别在于, 第一种写法使用的是CDN创建的<a href=\"http://www.bootcdn.cn/?\" target=\"_blank\" rel=\"external\">在线文档地址</a>, 该地址还保存了其他一些常见的文档, 非常强大.而第二种写法则是把文件下载到本地, 从本地读取代码高亮的配置.</p>\n<hr>\n<p>修改过程中, 我参考了以下两篇博文, 还趟过不少坑, 贴上博文的地址:</p>\n<ol>\n<li><a href=\"http://www.ieclipse.cn/en/2016/07/18/Web/Hexo-dev-highlight/\" target=\"_blank\" rel=\"external\">地址一</a></li>\n<li><a href=\"http://jumpbyte.cn/2016/07/02/use-and-install-prettify/\" target=\"_blank\" rel=\"external\">地址二</a></li>\n</ol>\n","categories":["hexo"],"tags":["hexo","个人博客"]},{"title":"我的第一篇文章","url":"http://hchong.net/2016/12/20/我的第一篇文章/","content":"<h1 id=\"我想测试一下\"><a href=\"#我想测试一下\" class=\"headerlink\" title=\"我想测试一下\"></a>我想测试一下</h1><pre><code class=\"obj\">#import &quot;SMSTempletCell.h&quot;\n\n@interface SMSTempletCell(){\n\n    __weak IBOutlet UILabel *message;\n    __weak IBOutlet UIButton *deleteButton;\n}\n\n@end\n\n@implementation SMSTempletCell\n\n- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier{\n    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];\n    if (self) {\n       self = LoadNibWithName([[SMSTempletCell class] description]);\n    }\n    return self;\n}\n\n\n- (IBAction)deleteAction:(id)sender {\n    if ([self.delegate respondsToSelector:@selector(SMSTempletCell:deleteButtonClicked:)]) {\n        [self.delegate SMSTempletCell:self deleteButtonClicked:sender];\n    }\n}\n\n- (void)fillMessage:(NSString*)msg cellIndex:(NSInteger)index{\n    message.text = msg;\n    deleteButton.tag = index;\n}\n@end\n</code></pre>\n<blockquote>\n<p>你好啊</p>\n<hr>\n<p>这是一个测试</p>\n<p>asdf </p>\n</blockquote>\n<pre><code>Installing SCCUtil (0.3.4)\nInstalling SCCWebView (1.1.0)\nInstalling SCCWechat (1.7.4.1)\nInstalling SDAutoLayout (2.1.7)\nInstalling SDCycleScrollView (1.64)\nInstalling SDWebImage (3.7.6)\nInstalling SVProgressHUD (2.1.2)\nInstalling UICountingLabel (1.2.0)\nInstalling UITableView+FDTemplateLayoutCell (1.5.beta)\nInstalling UIView+FDCollapsibleConstraints (1.1)\nInstalling UMengAnalytics-NO-IDFA (4.1.1)\nInstalling UMengSocialCOM (5.2.1)\nInstalling YYModel (1.0.4)\nInstalling ZipArchive (1.4.0)\nInstalling cheniu_share (0.6.2)\nInstalling dfc_chooseLocation (0.3.3)\nInstalling libextobjc (0.4.1)\n</code></pre><p>##测试1<br><del>这是之前的</del></p>\n","categories":["测试"],"tags":["测试","iOS"]},{"title":"我的第二篇文章","url":"http://hchong.net/2016/12/20/Headers/","content":"<h1 id=\"我想测试一下\"><a href=\"#我想测试一下\" class=\"headerlink\" title=\"我想测试一下\"></a>我想测试一下</h1><pre><code>//\n//  Created by dasheng on 2016/11/29.\n//  Copyright © 2016年 zt. All rights reserved.\n//\n\n#import &quot;DFCSaleRemindReselectSaleVC.h&quot;\n#import &quot;DFCCRMHttpNewManager.h&quot;\n#import &quot;NSUserDefaults+SafeAccess.h&quot;\n#import &quot;NSDictionary+SafeAccess.h&quot;\n#import &quot;DFCProgressHUD.h&quot;\n#import &quot;DFCRefreshTableVC+EmptyConfig.h&quot;\n#import &quot;DFCMacros.h&quot;\n#import &quot;DFCCRMSalersVO.h&quot;\n#import &quot;UIView+SCCLayout.h&quot;\n#import &quot;DFCColorFontLibrary.h&quot;\n#import &quot;Masonry.h&quot;\n#import &quot;UIViewController+DFCCustomBar.h&quot;\n#import &quot;DFCSaleRemindNotificationVC.h&quot;\n#import &quot;NSArray+SafeAccess.h&quot;\n#import &quot;DFCLog.h&quot;\n\n#pragma mark - def\n\n@interface DFCSaleRemindReselectSaleVC (){\n\n    NSInteger _selectIndex;\n\n    BOOL      _isNotification;\n}\n\n@property (nonatomic, strong) NSMutableArray *dataArray;\n@property (nonatomic, strong) UIButton       *doneButton;\n@property (nonatomic, strong) UIView         *topView;\n@property (nonatomic, strong) UIButton       *selectButton;\n@property (nonatomic, strong) UILabel        *titleLabel;\n@property (nonatomic, strong) UILabel        *notifiLabel;\n@property (nonatomic, strong) UIImageView    *arrowImageView;\n\n@property (nonatomic, strong) UILabel        *sectionLabel;\n\n@end\n\n@implementation DFCSaleRemindReselectSaleVC\n\n#pragma mark - Life Cycle\n- (void)viewDidLoad{\n\n    [super viewDidLoad];\n\n    self.title = @&quot;选择销售&quot;;\n    _selectIndex = -1;\n    _isNotification = YES;\n    [self uiConfig];\n    [self refreshHeader];\n}\n\n- (void)dealloc{\n\n\n}\n\n#pragma mark - Private Methon\n\n- (void)uiConfig{\n\n    [self addBarRightButtons:@[self.doneButton]];\n    self.doneButton.enabled = NO;\n\n    self.tbView.frame = CGRectMake(0, 107, [DFCMacros deviceSize].width, [DFCMacros deviceSize].height - 107);\n    self.tbView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;\n    self.tbView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];\n\n    [self.view addSubview:self.topView];\n    [self.topView addSubview:self.selectButton];\n    [self.topView addSubview:self.sectionLabel];\n    [self.selectButton addSubview:self.notifiLabel];\n    [self.selectButton addSubview:self.titleLabel];\n    [self.selectButton addSubview:self.arrowImageView];\n\n    [self.topView mas_makeConstraints:^(MASConstraintMaker *make) {\n        make.top.equalTo(self.view).offset(64);\n        make.left.equalTo(self.view);\n        make.right.equalTo(self.view);\n        make.height.equalTo(@107);\n    }];\n\n    [self.selectButton mas_makeConstraints:^(MASConstraintMaker *make) {\n        make.top.equalTo(self.topView).offset(16);\n        make.left.equalTo(self.topView);\n        make.right.equalTo(self.topView);\n        make.height.equalTo(@44);\n    }];\n\n    [self.titleLabel mas_makeConstraints:^(MASConstraintMaker *make) {\n        make.left.equalTo(self.selectButton).offset(16);\n        make.centerY.equalTo(self.selectButton);\n    }];\n\n    [self.notifiLabel mas_makeConstraints:^(MASConstraintMaker *make) {\n        make.right.equalTo(self.arrowImageView.mas_left).offset(-10);\n        make.centerY.equalTo(self.selectButton);\n    }];\n\n    [self.arrowImageView mas_makeConstraints:^(MASConstraintMaker *make) {\n        make.right.equalTo(self.selectButton).offset(-16);\n        make.centerY.equalTo(self.selectButton);\n        make.width.equalTo(@9.5);\n        make.height.equalTo(@16);\n    }];\n\n    [self.sectionLabel mas_makeConstraints:^(MASConstraintMaker *make) {\n        make.top.equalTo(self.selectButton.mas_bottom).offset(20);\n        make.left.equalTo(self.view).offset(16);\n    }];\n}\n\n#pragma mark - NetWork Request\n\n- (void)loadNewData{\n\n    [super loadNewData];\n\n    [self requstSalerList];\n}\n\n- (void)requstSalerList{\n\n    NSDictionary *parameter = @{\n                                    @&quot;shopCode&quot;: [[NSUserDefaults dfc_dictionaryForKey:DFC_User_Dic] dfc_stringForKey:@&quot;store&quot;]\n                                };\n\n    [DFCCRMHttpNewManager getShopSalersListWithParameter:parameter callBack:^(id data, DFCHttpStatus status) {\n\n        [self endRefreshHeader];\n        if (status == DFCHttpSuccess) {\n            [self addEmptyDelegate:self requestSuccess:YES];\n            self.dataArray = [DFCCRMSalersVO arrayOfModelsFromDictionaries:data error:nil];\n            [self.tbView reloadData];\n        }else if(status == DFCHttpFaild){\n\n            [self addEmptyDelegate:self requestSuccess:NO];\n            [DFCProgressHUD delayDisplayHUDWithType:SCProgressHudType_Error enableUserInteraction:YES msg:data];\n        }\n    }];\n}\n\n#pragma mark - Event Response\n\n- (void)doneButtonAction{\n\n    DFCCRMSalersVO *salersVO = [self.dataArray objectAtIndex:_selectIndex];\n\n    NSMutableString *ids = [@&quot;&quot; mutableCopy];\n    for (int i = 0; i&lt;[_selectIdArray count]; i++) {\n        if (i == [_selectIdArray count] - 1) {\n            [ids appendString:FormatStr(@&quot;%@&quot;,[_selectIdArray dfc_stringWithIndex:i])];\n        }else{\n            [ids appendString:FormatStr(@&quot;%@,&quot;,[_selectIdArray dfc_stringWithIndex:i])];\n        }\n    }\n\n    NSDictionary *parameter = @{\n                                @&quot;belongSales&quot;: salersVO.salerId,\n                                @&quot;ids&quot;:ids,\n                                @&quot;isProduceChance&quot;:@(_isNotification)\n                                };\n\n    [DFCProgressHUD show];\n    [DFCCRMHttpNewManager changeToNewSalerWithParameter:parameter callBack:^(id data, DFCHttpStatus status) {\n\n        [DFCProgressHUD dismiss];\n        if (status == DFCHttpSuccess) {\n            [self redistributionMsg:_selectIdArray.count isNotification:_isNotification];\n\n            NSMutableArray *viewControllers = [[self.navigationController viewControllers] mutableCopy];\n            NSInteger index = [viewControllers indexOfObject:self];\n            if (index&gt;=2) {\n                [viewControllers removeObjectAtIndex:index - 1];\n                [self.navigationController setViewControllers:viewControllers];\n            }\n            [self.navigationController popViewControllerAnimated:YES];\n            dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.5 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n                [DFCProgressHUD showTextWithStatus:FormatStr(@&quot;已分配%ld名客户给%@&quot;,[_selectIdArray count],salersVO.salerName)];\n            });\n\n        }else if(status == DFCHttpFaild){\n\n            [DFCProgressHUD delayDisplayHUDWithType:SCProgressHudType_Error enableUserInteraction:YES msg:data];\n        }\n    }];\n}\n\n- (void)selectButtonAction{\n\n    DFCSaleRemindNotificationVC *notificationVC = [[DFCSaleRemindNotificationVC alloc] init];\n    notificationVC.isNotification = _isNotification;\n    notificationVC.callBack = ^(BOOL isNotifi){\n        if (isNotifi) {\n            _isNotification = YES;\n            self.notifiLabel.text = @&quot;通知&quot;;\n        }else{\n            _isNotification = NO;\n            self.notifiLabel.text = @&quot;不通知&quot;;\n        }\n    };\n    [self.navigationController pushViewController:notificationVC animated:YES];\n}\n\n//埋点\n- (void)redistributionMsg:(NSInteger)count isNotification:(BOOL)isNotification{\n    [DFCLog log:@&quot;过期回访提醒列表－重新分配－点击完成-是否通知到销售新商机&quot;];\n}\n\n#pragma mark - Delegate Or DataSource\n\n- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{\n\n    return self.dataArray.count;\n}\n\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{\n    if (self.dataArray.count == 0) {\n        return [self frameZeroCell];\n    }\n\n    static NSString *CellIdentifier = @&quot;DFCSaleRemindReselectCell&quot;;\n    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];\n    if (!cell) {\n        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle\n                                             reuseIdentifier:CellIdentifier];\n        if ([cell respondsToSelector:@selector(setLayoutMargins:)]) {\n            cell.layoutMargins = UIEdgeInsetsZero;\n        }\n        cell.separatorInset = UIEdgeInsetsZero;\n    }\n    DFCCRMSalersVO *salersVO = [self.dataArray objectAtIndex:indexPath.row];\n    cell.tintColor = [DFCColorFontLibrary DFC_COLOR_Primary];\n    cell.textLabel.text = salersVO.salerName;\n    cell.textLabel.font = [DFCColorFontLibrary DFC_FONT_P2];\n    cell.selectionStyle = UITableViewCellSelectionStyleNone;\n\n    if (indexPath.row == _selectIndex) {\n\n        cell.textLabel.textColor = [DFCColorFontLibrary DFC_COLOR_Primary];\n        cell.accessoryType = UITableViewCellAccessoryCheckmark;\n    }else{\n\n        cell.textLabel.textColor = [DFCColorFontLibrary DFC_COLOR_Black1];\n        cell.accessoryType = UITableViewCellAccessoryNone;\n    }\n\n    return cell;\n}\n\n\n- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{\n\n    if (self.dataArray.count == 0) {\n        return 0;\n    }\n\n    return 44;\n}\n\n- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{\n\n    if (indexPath.row &lt; [self.dataArray count]) {\n\n        _selectIndex = indexPath.row;\n        _doneButton.enabled = YES;\n        [self.tbView reloadData];\n    }\n}\n\n#pragma mark - Getter and Setter\n\n- (UIView *)topView{\n\n    if (!_topView) {\n\n        _topView = [[UIView alloc] init];\n        _topView.backgroundColor = [DFCColorFontLibrary DFC_COLOR_Gray3];\n    }\n    return _topView;\n}\n\n- (UIButton *)selectButton{\n\n    if (!_selectButton) {\n\n        _selectButton = [[UIButton alloc] init];\n        [_selectButton addTarget:self action:@selector(selectButtonAction) forControlEvents:UIControlEventTouchUpInside];\n        _selectButton.backgroundColor = [DFCColorFontLibrary DFC_COLOR_White1];\n    }\n    return _selectButton;\n}\n\n\n- (UILabel *)titleLabel{\n\n    if (!_titleLabel) {\n\n        _titleLabel = [[UILabel alloc] init];\n        _titleLabel.font = [DFCColorFontLibrary DFC_FONT_P2];\n        _titleLabel.textColor = [DFCColorFontLibrary DFC_COLOR_Black1];\n        _titleLabel.text = @&quot;通知到销售的新商机&quot;;\n    }\n    return _titleLabel;\n}\n\n- (UILabel *)notifiLabel{\n\n    if (!_notifiLabel) {\n\n        _notifiLabel = [[UILabel alloc] init];\n        _notifiLabel.font = [DFCColorFontLibrary DFC_FONT_P2];\n        _notifiLabel.textColor = [DFCColorFontLibrary DFC_COLOR_Black1];\n        _notifiLabel.text = @&quot;通知&quot;;\n    }\n    return _notifiLabel;\n}\n\n- (UIImageView *)arrowImageView{\n\n    if (!_arrowImageView) {\n\n        _arrowImageView = [[UIImageView alloc] init];\n        [_arrowImageView setImage:[UIImage imageNamed:@&quot;setting_entry&quot;]];\n    }\n    return _arrowImageView;\n}\n\n- (UILabel *)sectionLabel{\n\n    if (!_sectionLabel) {\n\n        _sectionLabel = [[UILabel alloc] init];\n        _sectionLabel.font = [DFCColorFontLibrary DFC_FONT_P2];\n        _sectionLabel.textColor = [DFCColorFontLibrary DFC_COLOR_Black3];\n        _sectionLabel.text = @&quot;选择要通知的销售&quot;;\n    }\n    return _sectionLabel;\n}\n\n- (UIButton *)doneButton {\n    if (!_doneButton) {\n        _doneButton = [UIButton buttonWithType:UIButtonTypeCustom];\n        _doneButton.backgroundColor = [UIColor clearColor];\n        [_doneButton addTarget:self action:@selector(doneButtonAction) forControlEvents:UIControlEventTouchUpInside];\n        _doneButton.contentHorizontalAlignment = UIControlContentHorizontalAlignmentRight;\n        _doneButton.titleLabel.font = [DFCColorFontLibrary DFC_FONT_S2WithBold:YES];\n        [_doneButton setTitle:@&quot;完成&quot; forState:UIControlStateNormal];\n        [_doneButton setTitleColor:[DFCColorFontLibrary DFC_COLOR_C1] forState:UIControlStateNormal];\n        [_doneButton setTitleColor:[DFCColorFontLibrary DFC_COLOR_Gray1] forState:UIControlStateDisabled];\n        _doneButton.frame = CGRectMake(0, 0, 60, 44);\n    }\n    return _doneButton;\n}\n\n@end\n</code></pre><blockquote>\n<p>你好啊</p>\n<hr>\n<p>这是一个测试</p>\n<p>asdf </p>\n</blockquote>\n<pre><code class=\"objc\">Installing SCCUtil (0.3.4)\nInstalling SCCWebView (1.1.0)\nInstalling SCCWechat (1.7.4.1)\nInstalling SDAutoLayout (2.1.7)\nInstalling SDCycleScrollView (1.64)\nInstalling SDWebImage (3.7.6)\nInstalling SVProgressHUD (2.1.2)\nInstalling UICountingLabel (1.2.0)\nInstalling UITableView+FDTemplateLayoutCell (1.5.beta)\nInstalling UIView+FDCollapsibleConstraints (1.1)\nInstalling UMengAnalytics-NO-IDFA (4.1.1)\nInstalling UMengSocialCOM (5.2.1)\nInstalling YYModel (1.0.4)\nInstalling ZipArchive (1.4.0)\nInstalling cheniu_share (0.6.2)\nInstalling dfc_chooseLocation (0.3.3)\nInstalling libextobjc (0.4.1)\n</code></pre>\n<p>##测试1<br><del>这是之前的</del></p>\n","categories":["测试"],"tags":["测试","高亮","代码"]},{"title":"Hello World","url":"http://hchong.net/2016/08/16/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre><code class=\"bash\">$ hexo new &quot;My New Post&quot;\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre><code class=\"bash\">$ hexo server\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre><code class=\"bash\">$ hexo generate\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre><code class=\"bash\">$ hexo deploy\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"category","url":"http://hchong.net/category/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"http://hchong.net/about/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://hchong.net/link/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://hchong.net/project/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://hchong.net/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://hchong.net/tag/index.html","content":"","categories":[],"tags":[]}]